name: Test Suite

on:
    push:
        branches: ["master", "v1"]
    pull_request:
        branches: ["master", "v1"]

jobs:
    linters:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.12
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements/requirements.txt
                  pip install -r requirements/dev-requirements.txt
                  pip install -r requirements/test-requirements.txt
                  pip install -r requirements/extras/authenticator.txt

            - name: Lint
              run: ./scripts/lint.sh

    test_postgres:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

        # Service containers to run with `container-job`
        services:
            # Label used to access the service container
            postgres:
                # Docker Hub image
                image: postgres
                # Provide the password for postgres
                env:
                    POSTGRES_PASSWORD: postgres
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements/requirements.txt
                  pip install -r requirements/test-requirements.txt
            - name: Test with pytest, Postgres
              run: ./scripts/test-postgres.sh
              env:
                  PG_HOST: localhost
                  PG_DATABASE: postgres
                  PG_PASSWORD: postgres
            - name: Upload coverage
              uses: codecov/codecov-action@v1
              if: matrix.python-version == '3.12'

    test_sqlite:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements/requirements.txt
                  pip install -r requirements/test-requirements.txt
            - name: Test with pytest, SQLite
              run: ./scripts/test-sqlite.sh
            - name: Upload coverage
              uses: codecov/codecov-action@v3
              if: matrix.python-version == '3.12'
